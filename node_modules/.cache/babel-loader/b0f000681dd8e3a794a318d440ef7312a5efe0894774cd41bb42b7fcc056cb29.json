{"ast":null,"code":"import React,{useContext,useEffect,useState}from'react';import{gameSettingsContext}from'../../contexts/Context';import GameButton from'./GameButton';import{jsx as _jsx}from\"react/jsx-runtime\";const GameBoard=()=>{const gameContext=useContext(gameSettingsContext);const gameSettings=gameContext.gameSettings;const[squares,setSquares]=useState([]);const[firstClick,setFirstClick]=useState(true);const[flags,setFlags]=useState(gameSettings.flags);const[mines,setMines]=useState(gameSettings.mines);const[notMinedBlock,setNotMinedBlock]=useState(null);const gameStart=()=>{gameContext.setGameSettings({...gameSettings,gameStart:true});let squaresArray=[];for(let i=0;i<gameSettings.columns*gameSettings.rows;i++){squaresArray.push({id:i+1,isMined:false,isRevealed:false,isFlagged:false,value:0,col:Math.floor(i%gameSettings.rows),row:Math.floor(i/gameSettings.columns)});}setSquares(squaresArray);};useEffect(()=>{if(!gameSettings.winner){if(gameContext.gameSettings.mines===0||notMinedBlock===0){gameContext.setGameSettings(prevSettings=>({...prevSettings,winner:true}));}}});return squares.length===0&&gameSettings.columns!==undefined?/*#__PURE__*/_jsx(\"div\",{className:\"wrapper-main\",children:/*#__PURE__*/_jsx(\"button\",{className:\"game-board__button-start\",onClick:gameStart,children:\"\\u041D\\u0430\\u0447\\u0430\\u0442\\u044C\"})}):/*#__PURE__*/_jsx(\"div\",{className:\"game-board-content\",children:/*#__PURE__*/_jsx(\"div\",{className:\"game-board\",style:{gridTemplateColumns:\"repeat(\".concat(gameSettings.columns,\", minmax(0, 1fr))\"),gridTemplateRows:\"repeat(\".concat(gameSettings.rows,\", minmax(0, 1fr))\")},children:squares.map(square=>{return/*#__PURE__*/_jsx(GameButton,{square:square,firstClick:firstClick,setFirstClick:setFirstClick,squares:squares,setSquares:setSquares,setFlags:setFlags,flags:flags,setMines:setMines,mines:mines,notMinedBlock:notMinedBlock,setNotMinedBlock:setNotMinedBlock},square.id);})})});};export default GameBoard;","map":{"version":3,"names":["React","useContext","useEffect","useState","gameSettingsContext","GameButton","jsx","_jsx","GameBoard","gameContext","gameSettings","squares","setSquares","firstClick","setFirstClick","flags","setFlags","mines","setMines","notMinedBlock","setNotMinedBlock","gameStart","setGameSettings","squaresArray","i","columns","rows","push","id","isMined","isRevealed","isFlagged","value","col","Math","floor","row","winner","prevSettings","length","undefined","className","children","onClick","style","gridTemplateColumns","concat","gridTemplateRows","map","square"],"sources":["C:/Users/bibat/OneDrive/Рабочий стол/Работа/поверстать/saper/src/components/Helpers/GameBoard.jsx"],"sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\r\nimport { gameSettingsContext } from '../../contexts/Context';\r\nimport GameButton from './GameButton';\r\n\r\nconst GameBoard = () => {\r\n    const gameContext = useContext(gameSettingsContext);\r\n    const gameSettings = gameContext.gameSettings;\r\n    const [squares, setSquares] = useState([])\r\n    const [firstClick, setFirstClick] = useState(true);\r\n    const [flags, setFlags] = useState(gameSettings.flags)\r\n    const [mines, setMines] = useState(gameSettings.mines)\r\n    const [notMinedBlock, setNotMinedBlock] = useState(null)\r\n\r\n    const gameStart = () => {\r\n        gameContext.setGameSettings({\r\n            ...gameSettings, gameStart: true\r\n        })\r\n        let squaresArray = [];\r\n        for (let i = 0; i < gameSettings.columns * gameSettings.rows; i++) {\r\n            squaresArray.push({\r\n                id: i + 1,\r\n                isMined: false,\r\n                isRevealed: false,\r\n                isFlagged: false,\r\n                value: 0,\r\n                col: Math.floor((i % gameSettings.rows)),\r\n                row: Math.floor((i / gameSettings.columns))\r\n            });\r\n        }\r\n        setSquares(squaresArray)\r\n    };\r\n    \r\n    useEffect(() => {\r\n        if (!gameSettings.winner) {\r\n            if (gameContext.gameSettings.mines === 0 || notMinedBlock === 0) {\r\n                gameContext.setGameSettings((prevSettings) => ({\r\n                    ...prevSettings,\r\n                    winner: true\r\n                }))\r\n            }\r\n        }\r\n    })\r\n    \r\n\r\n    return (\r\n        squares.length === 0 && gameSettings.columns !== undefined ?\r\n        <div className=\"wrapper-main\">\r\n            <button className='game-board__button-start' onClick={gameStart}>Начать</button>\r\n        </div>\r\n        :\r\n        <div className=\"game-board-content\">\r\n            <div className=\"game-board\" style={{\r\n                gridTemplateColumns: `repeat(${gameSettings.columns}, minmax(0, 1fr))`,\r\n                gridTemplateRows: `repeat(${gameSettings.rows}, minmax(0, 1fr))`\r\n                }}>\r\n                    {squares.map(square => {\r\n                        return (\r\n                            <GameButton \r\n                            key={square.id} \r\n                            square={square} \r\n                            firstClick={firstClick} \r\n                            setFirstClick={setFirstClick}\r\n                            squares={squares}\r\n                            setSquares={setSquares}\r\n                            setFlags={setFlags}\r\n                            flags={flags}\r\n                            setMines={setMines}\r\n                            mines={mines}\r\n                            notMinedBlock={notMinedBlock}\r\n                            setNotMinedBlock={setNotMinedBlock}\r\n                            />\r\n                        )\r\n                    })}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default GameBoard;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}